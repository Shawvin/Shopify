total[-2]
dim(total[,-2])
dim(total[-2])
dim(total)
str(total[,-2])
str(total[-2])
str(total)
knnImputation(total[,-2])
total$Age<-knnImputation(total[,-2])$Age
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(caret))
suppressMessages(library(DMwR))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(ggplot2))
suppressMessages(library(Hmisc))
if (!file.exists("train.csv"))
download.file("https://www.kaggle.com/c/titanic/download/train.csv","train.csv")
if (!file.exists("test.csv"))
download.file("https://www.kaggle.com/c/titanic/download/test.csv","test.csv")
train<-read.csv("train.csv")
test<-read.csv("test.csv")
names(train)
names(test)
test$Survived<-rep(NA,dim(test)[1])
total<-rbind(train,test)
str(total)
missingRate<-function(x)
{if (is.character(x))
{round(sum(x=="")/length(x)*100,3)}
else
{round(sum(is.na(x))/length(x)*100,3)}
}
missing<-sapply(total,missingRate)%>% data.frame()
names(missing)<-"missingRate"
missing$column<-rownames(missing)
rownames(missing)<-1:nrow(missing)
g<-ggplot(data.frame(missing),aes(x=reorder(column,missingRate),y=missingRate,fill=column))+geom_bar(stat="identity")+coord_flip(ylim=c(0,100))+geom_text(aes(label=missingRate),nudge_y=3)
g
total$Age<-knnImputation(total[,-2])$Age
missingIndex<-which(total$Embarked=="")
total[missingIndex,]$Embarked<-NA
total$Embarked<-knnImputation(total[,-2])$Embarked
total$Fare<-knnImputation(total[,-2])$Fare
total$Survived<-as.factor(total$Survived)
train$Survived<-as.factor(train$Survived)
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(caret))
suppressMessages(library(DMwR))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(ggplot2))
suppressMessages(library(Hmisc))
if (!file.exists("train.csv"))
download.file("https://www.kaggle.com/c/titanic/download/train.csv","train.csv")
if (!file.exists("test.csv"))
download.file("https://www.kaggle.com/c/titanic/download/test.csv","test.csv")
train<-read.csv("train.csv")
test<-read.csv("test.csv")
names(train)
names(test)
test$Survived<-rep(NA,dim(test)[1])
total<-rbind(train,test)
str(total)
missingRate<-function(x)
{if (is.character(x))
{round(sum(x=="")/length(x)*100,3)}
else
{round(sum(is.na(x))/length(x)*100,3)}
}
missing<-sapply(total,missingRate)%>% data.frame()
names(missing)<-"missingRate"
missing$column<-rownames(missing)
rownames(missing)<-1:nrow(missing)
g<-ggplot(data.frame(missing),aes(x=reorder(column,missingRate),y=missingRate,fill=column))+geom_bar(stat="identity")+coord_flip(ylim=c(0,100))+geom_text(aes(label=missingRate),nudge_y=3)
g
knnImputation(total[,-2])$Age
total$Age<-knnImputation(total[,-2]$Age)
total$Age<-knnImputation(total[,-2]$Age)
total$Age<-knnImputation(total[,-2])$Age
missingIndex<-which(total$Embarked=="")
total[missingIndex,]$Embarked<-NA
total$Embarked<-knnImputation(total[,-2])$Embarked
total$Fare<-knnImputation(total[,-2])$Fare
total$Survived<-as.factor(total$Survived)
train$Survived<-as.factor(train$Survived)
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(caret))
suppressMessages(library(DMwR))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(ggplot2))
suppressMessages(library(Hmisc))
if (!file.exists("train.csv"))
download.file("https://www.kaggle.com/c/titanic/download/train.csv","train.csv")
if (!file.exists("test.csv"))
download.file("https://www.kaggle.com/c/titanic/download/test.csv","test.csv")
train<-read.csv("train.csv", stringsAsFactors = FALSE)
test<-read.csv("test.csv", stringsAsFactors = FALSE)
names(train)
names(test)
test$Survived<-rep(NA,dim(test)[1])
total<-rbind(train,test)
str(total)
missingRate<-function(x)
{if (is.character(x))
{round(sum(x=="")/length(x)*100,3)}
else
{round(sum(is.na(x))/length(x)*100,3)}
}
missing<-sapply(total,missingRate)%>% data.frame()
names(missing)<-"missingRate"
missing$column<-rownames(missing)
rownames(missing)<-1:nrow(missing)
g<-ggplot(data.frame(missing),aes(x=reorder(column,missingRate),y=missingRate,fill=column))+geom_bar(stat="identity")+coord_flip(ylim=c(0,100))+geom_text(aes(label=missingRate),nudge_y=3)
g
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(caret))
suppressMessages(library(DMwR))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(ggplot2))
suppressMessages(library(Hmisc))
if (!file.exists("train.csv"))
download.file("https://www.kaggle.com/c/titanic/download/train.csv","train.csv")
if (!file.exists("test.csv"))
download.file("https://www.kaggle.com/c/titanic/download/test.csv","test.csv")
train<-read.csv("train.csv", stringsAsFactors = FALSE)
test<-read.csv("test.csv", stringsAsFactors = FALSE)
names(train)
names(test)
test$Survived<-rep(NA,dim(test)[1])
total<-rbind(train,test)
str(total)
missingRate<-function(x)
{if (is.character(x))
{round(sum(x=="")/length(x)*100,3)}
else
{round(sum(is.na(x))/length(x)*100,3)}
}
missing<-sapply(total,missingRate)%>% data.frame()
names(missing)<-"missingRate"
missing$column<-rownames(missing)
rownames(missing)<-1:nrow(missing)
g<-ggplot(data.frame(missing),aes(x=reorder(column,missingRate),y=missingRate,fill=column))+geom_bar(stat="identity")+coord_flip(ylim=c(0,100))+geom_text(aes(label=missingRate),nudge_y=3)
g
total1<-kNN(total[-2])
?kNN
library(VIM)
install.packages(VIN)
install.packages(VIM)
install.packages("VIM)
install.packages("VIM)
install.packages("VIM")
?kNN
??kNN
library(VIM)
total1<-kNN(total[-2])
str(total1)
total1<-kNN(total[-2],variable=c("age","Fare"))
total1<-kNN(total[-2],variable=c("Age","Fare"))
head(total1)
is.na(total1$Age)
which(is.na(total1$Age))
suppressMessages(library(caret))
suppressMessages(library(DMwR))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(ggplot2))
suppressMessages(library(Hmisc))
suppressMessages(library(VIM))
if (!file.exists("train.csv"))
download.file("https://www.kaggle.com/c/titanic/download/train.csv","train.csv")
if (!file.exists("test.csv"))
download.file("https://www.kaggle.com/c/titanic/download/test.csv","test.csv")
train<-read.csv("train.csv", stringsAsFactors = FALSE)
test<-read.csv("test.csv", stringsAsFactors = FALSE)
names(train)
names(test)
test$Survived<-rep(NA,dim(test)[1])
total<-rbind(train,test)
str(total)
missingRate<-function(x)
{if (is.character(x))
{round(sum(x=="")/length(x)*100,3)}
else
{round(sum(is.na(x))/length(x)*100,3)}
}
missing<-sapply(total,missingRate)%>% data.frame()
names(missing)<-"missingRate"
missing$column<-rownames(missing)
rownames(missing)<-1:nrow(missing)
g<-ggplot(data.frame(missing),aes(x=reorder(column,missingRate),y=missingRate,fill=column))+geom_bar(stat="identity")+coord_flip(ylim=c(0,100))+geom_text(aes(label=missingRate),nudge_y=3)
g
?kNN
imputeTotal<-kNN(total[-2],variable=c("Age","Fare","Embarked"),k=10)
total$Age<-imputeTotal$Age
total$Fare<-imputeTotal$Fare
total$Embarked<-imputeTotal$Embarked
total$Survived<-as.factor(total$Survived)
train$Survived<-as.factor(train$Survived)
str(total)
dim(total)
n=nrow(train)
train<-total[1:n,]
table(total$Pclass)
ggplot(train,aes(Pclass,fill=Survived))+geom_bar(position="fill")
title<-function(x){
strsplit(x,"[,.]")[[1]][2]
}
total$Title<-sapply(as.character(total$Name),title)
table(total$Title)
total$Title<-gsub("Capt|Col|Don$|Jonkheer|Major|Sir","Mr",total$Title)
total$Title<-gsub("Dona|Mme|the Countess","Mrs",total$Title)
total$Title<-gsub("Lady|Mlle|Ms","Miss",total$Title)
table(total$Title)
table(total$Sex)
quantile(total$Age)
ggplot(train,aes(Sex,fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(cut2(Age,18),fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(SibSp,fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(Parch,fill=Survived))+geom_bar(position="fill")
str(total$Ticket)
tnum<-table(total$Ticket)
TicketType<-function(x){
ifelse(tnum[x]>1,paste(tnum[x],"Shared",sep=""),"Single")
}
total$TicketType<-as.factor(sapply(as.character(total$Ticket),TicketType))
quantile(total$Fare)
ggplot(train,aes(cut2(Fare,g=4),fill=Survived))+geom_bar(position="fill")
table(total$Embarked)
ggplot(train,aes(Embarked,fill=Survived))+geom_bar(position="fill")
n=nrow(train)
train<-total[1:n,]
test<-total[-(1:n),]
traincontrol<-trainControl(method="repeatedcv")
traindata<-train[,-c(1,4,9,11)]
modFit<-train(as.factor(Survived)~.,data=traindata,method="rf",trControl=traincontrol)
modFit2<-train(as.factor(Survived)~.,data=traindata,method="rpart",trControl=traincontrol)
modFit3<-train(as.factor(Survived)~.,data=traindata,method="gbm",trControl=traincontrol,verbose=FALSE)
modFit4<-train(as.factor(Survived)~.,data=traindata,method="nb",trControl=traincontrol)
modFit
modFit2
modFit3
modFit4
test$Survived<-predict(modFit,test)
write.csv(test[,1:2],"result1.csv",row.names = FALSE)
test$Survived<-predict(modFit2,test)
write.csv(test[,1:2],"result2.csv",row.names = FALSE)
test$Survived<-predict(modFit3,test)
table(test$Survived)
write.csv(test[,1:2],"result3.csv",row.names = FALSE)
n=nrow(train)
train<-total[1:n,]
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(caret))
suppressMessages(library(DMwR))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(ggplot2))
suppressMessages(library(Hmisc))
suppressMessages(library(VIM))
if (!file.exists("train.csv"))
download.file("https://www.kaggle.com/c/titanic/download/train.csv","train.csv")
if (!file.exists("test.csv"))
download.file("https://www.kaggle.com/c/titanic/download/test.csv","test.csv")
train<-read.csv("train.csv", stringsAsFactors = FALSE)
test<-read.csv("test.csv", stringsAsFactors = FALSE)
names(train)
names(test)
test$Survived<-rep(NA,dim(test)[1])
total<-rbind(train,test)
str(total)
missingRate<-function(x)
{if (is.character(x))
{round(sum(x=="")/length(x)*100,3)}
else
{round(sum(is.na(x))/length(x)*100,3)}
}
missing<-sapply(total,missingRate)%>% data.frame()
names(missing)<-"missingRate"
missing$column<-rownames(missing)
rownames(missing)<-1:nrow(missing)
g<-ggplot(data.frame(missing),aes(x=reorder(column,missingRate),y=missingRate,fill=column))+geom_bar(stat="identity")+coord_flip(ylim=c(0,100))+geom_text(aes(label=missingRate),nudge_y=3)
g
imputeTotal<-kNN(total[-2],variable=c("Age","Fare","Embarked"),k=10)
total$Age<-imputeTotal$Age
total$Fare<-imputeTotal$Fare
total$Embarked<-imputeTotal$Embarked
total$Survived<-as.factor(total$Survived)
train$Survived<-as.factor(train$Survived)
dim(total)
n=nrow(train)
train<-total[1:n,]
table(total$Pclass)
ggplot(train,aes(Pclass,fill=Survived))+geom_bar(position="fill")
title<-function(x){
strsplit(x,"[,.]")[[1]][2]
}
total$Title<-sapply(as.character(total$Name),title)
table(total$Title)
total$Title<-gsub("Capt|Col|Don$|Jonkheer|Major|Sir","Mr",total$Title)
total$Title<-gsub("Dona|Mme|the Countess","Mrs",total$Title)
total$Title<-gsub("Lady|Mlle|Ms","Miss",total$Title)
table(total$Title)
table(total$Sex)
quantile(total$Age)
ggplot(train,aes(Sex,fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(cut2(Age,18),fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(SibSp,fill=Survived))+geom_bar(position="fill")
ggplot(train,aes(Parch,fill=Survived))+geom_bar(position="fill")
str(total$Ticket)
tnum<-table(total$Ticket)
TicketType<-function(x){
ifelse(tnum[x]>1,paste(tnum[x],"Shared",sep=""),"Single")
}
total$TicketType<-as.factor(sapply(as.character(total$Ticket),TicketType))
n=nrow(train)
train<-total[1:n,]
test<-total[-(1:n),]
traincontrol<-trainControl(method="repeatedcv")
traindata<-train[,-c(1,4,9,11)]
modFit<-train(as.factor(Survived)~.,data=traindata,method="rf",trControl=traincontrol)
modFit2<-train(as.factor(Survived)~.,data=traindata,method="rpart",trControl=traincontrol)
modFit3<-train(as.factor(Survived)~.,data=traindata,method="gbm",trControl=traincontrol,verbose=FALSE)
modFit
modFit2
modFit3
test$Survived<-predict(modFit,test)
write.csv(test[,1:2],"result1.csv",row.names = FALSE)
test$Survived<-predict(modFit2,test)
write.csv(test[,1:2],"result2.csv",row.names = FALSE)
test$Survived<-predict(modFit3,test)
table(test$Survived)
write.csv(test[,1:2],"result3.csv",row.names = FALSE)
modFit4<-train(as.factor(Survived)~.,data=traindata,method="nnet",trControl=traincontrol)
modFit3<-train(as.factor(Survived)~.,data=traindata,method="gbm",trControl=traincontrol,verbose=FALSE)
modFit4<-train(as.factor(Survived)~.,data=traindata,method="nnet",trControl=traincontrol,verbose=FALSE)
modFit4
test$Survived<-predict(modFit4,test)
table(test$Survived)
write.csv(test[,1:2],"result1.csv",row.names = FALSE)
test$Survived<-predict(modFit2,test)
table(test$Survived)
getwd()
test$Survived<-predict(modFit4,test)
table(test$Survived)
write.csv(test[,1:2],"result4.csv",row.names = FALSE)
install.packages(c("cowplot", "ggthemes", "usmap"))
head(iris)
svd1=svd(iris[1:4])
head(iris[1:4])
summary(svd1)
svd1$u
svd1$v
z=iris[1:4]*t(v[,1])
z=iris[1:4]*t(svd1$v[,1])
head(z)
z=iris[1:4]*v[,1]
z=iris[1:4]*svd1$v[,1]
head(z)
z=iris[1:4]*svd1$v[1]
head(z)
z=iris[1:4]%*%svd1$v[1]
z=iris[1:4] %*% svd1$v[1]
svd1$v[1]
svd1$v
svd1$v[1,]
svd1$v[1]
svd1$v[,1]
z=iris[1:4] %*% t(svd1$v[,1])
class(svd1$v)
class(iris[1:4])
z=matrix(iris[1:4]) %*% t(svd1$v[,1])
class(matrix(iris[1:4]))
z=(matrix(iris[1:4])) %*% t(svd1$v[,1])
dim(t(svd1$v[,1]))
dim(svd1$v[,1])
dim(svd1$v)
pca(iris[1:4])
?pca
??pca
pccomp(iris[1:4])
prcomp(iris[1:4])
svd1$d
dnorm(0,0,sd=2)
pnorm(2)
pnorm(2,0,1)
pnorm(2,0,2)
testM<-iris[1:4]
testM<-data.matrix(testM)
dim(testM)
test[1,]
testM[1,]
scaled_M<-scale(testM)
pnorm(scaled_M[1,])
scaled_M[1,]
sum(scaled_M,2)
?sum
rowsum(scaled_M)
rowSum(scaled_M)
?rowsum
rowSums(scaled_M)
?rowSums
product(pnorm(scaled_M[1,]))
prod(pnorm(scaled_M[1,]))
prod(pnorm(scaled_M[1:10,]))
rowProds(pnorm(scaled_M))
?rowProds
??rowProds
apply(pnorm(scaled_M),1,prod))
apply(pnorm(scaled_M),1,prod)\
apply(pnorm(scaled_M),1,prod)
p=colorRampPalette("red","green","blue")
p=colorRampPalette(c("red","green","blue"))
p(3)
p(6)
p(7)
showMe(p(7))
p2=colorRamp(c("red","green","blue"))
p2(0.5)
p2(0.3)
p2(1)
p2(c(0.1,0.1,0.1))
show_col(p(6))
sample.int
pix=sample.int(255,300)
pix=sample.int(255,300,replace=TRUE)
dim(pix)
length(pix)
pixel=matrix(pix,nrow=10,ncol=10)
dim(pix)
dim(pixel)
pixel
?array
?matrix
pixel=matrix(pix,c(10,10,3))
dim(pixel)
pixel=array(pix,c(10,10,3))
dim(pixel)
pixel[,,1]
pixel[,,2]
?dput
pixel2=matrix(pixel,nrow=1)
dim(pixel2)
head(pixel20)
head(pixel2)
# Installation guideline
# install.packages("keras")
# library(keras)
# install_keras(tensorflow="1.13.1")
library(keras)
is_keras_available()
a=c(3.5, 3.5 , 2.5)
b=c(4.5, 4, 1)
cov(a,b)
corr(a,b)
cor(a,b)
cor(a,b)*sd(a)*sd(b)
a=seq(9)
a
b=seq(9,1,-1)
b
cor(a,b)
cov(a,b)
78512+180+168655+801228
a=rnorm(100,0,1)
b=rnorm(100,3,2)
?t.test
t.test(a,b, var.equal = TRUE)
t.test(a,b)
summary(t.test(a,b, var.equal = TRUE))
3/12.863*sqrt(198)
3/12.863*sqrt(50)
sqrt(2.5)
mean(b-a)/12.863*sqrt(50)
setwd("C:/Users/Wang Xiaoyuan/Desktop/Shopify")
setwd("C:/Users/Wang Xiaoyuan/Desktop/Shopify/Recommendation")
library(shiny)
library(shinyjs)
dat<-read.csv("apps.csv", encoding="UTF-8")
dat2<-dat[,c(3,6)] %>% unique()
icons<-dat2$icon[1:100]
names(icons)<-sapply(1:length(icons), function(x) paste("id",x, sep=""))
titles<-dat2$title[1:100]
names(titles)<-names(icons)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
